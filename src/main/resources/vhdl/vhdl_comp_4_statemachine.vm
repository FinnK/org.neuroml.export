######################################################
### Template for SOM-VHDL codegen.                 ###
### This is work in progress. Expect major changes.###
######################################################

#if ($regimes.size() > 0)
---------------------------------------------------------------------
-- Regime State Machine Process
---------------------------------------------------------------------
##Regimes

regime_state_process_comb :process (sysparam_time_simtime,current_regime_in_int,statevariable_voltage_v_in)
begin 
next_regime <= current_regime_in_int;

if reset_model = '1' then  
	next_regime <= $defaultRegime ;
else
#foreach ($regime in $regimes) 


##then check for all events that drive this state
#foreach ($event in $regime.events)
#foreach ($transition in $event.effect.transitions)
if ( current_regime_in_int = $regime.name ) and eventport_in_$event.name = '1' then
	next_regime <= $transition;
end if;
#set( $temps = $temps + 1)
#end
#end

##then check for all conditional events that drive this state
#foreach ($event in $regime.conditions)
#foreach ($transition in $event.effect.transitions)
if ( current_regime_in_int = $regime.name ) and $event.condition then
	next_regime <= $transition;
end if;
#set( $temps = $temps + 1)
#end
#end


#end

end if;

end process;

current_regime_out_stdlv <= CONV_REGIME_TO_STDLV(next_regime);
current_regime_in_int <= CONV_STDLV_TO_REGIME(current_regime_in_stdlv);
---------------------------------------------------------------------
#end 


