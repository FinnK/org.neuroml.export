######################################################
### Template for SOM-VHDL codegen.                 ###
### This is work in progress. Expect major changes.###
######################################################

---------------------------------------------------------------------
-- Begin Internal Processes
---------------------------------------------------------------------

begin


#if ($name.contains("neuron_model"))
-- Instantiate the mux.
	--
dut : ParamMux
	generic map (
		NSpikeSources	=> cNSpikeSources,
		NOutputs		=> cNOutputs,
		NSelectBits		=> cNSelectBits)
	port map(
		SpikeIn 	=> eventport_in_spike_aggregate,
		SelectIn	=> SelectSpikesIn,
		SpikeOut	=> SpikeOut);

#end

---------------------------------------------------------------------
-- Child Component Instantiations and corresponding internal variables
---------------------------------------------------------------------
#set( $count = 0)
#foreach ($child in $Children)
#set( $foo = " " + $child.name + "_uut : " + $child.name)
$foo 
    port map (	clk => clk,
				rst => rst,
				ce => ce,
				step_once_go => step_once_go,
				reset_model => reset_model,
#set( $foo = "component_done => " + $child.name + "_component_done," )
				$foo
##Event Ports
    #foreach ($par in $child.eventports)
		#set( $foo = "eventport_" + $par.direction +  "_" + $par.name + " => SpikeOut(" + $count + "),"  )
		$foo
		#set( $count = $count + 1)
	#end

##Parameters
	#foreach ($par in $child.parameters)
		#set( $foo = "param_" + $par.type +  "_" + $par.name + " => param_"  + $par.type +  "_" + $child.name + "_" + $par.name + ","  )
		$foo
	#end

##Requirements
	#foreach ($par in $child.requirements)
		#if ($state.containsKey($par.name))
		#set( $foo = "requirement_" + $par.type +  "_" + $par.name + " => statevariable_" + $par.type +  "_" + $par.name + "_in,"  )
		$foo
		#else
		#set( $foo = "requirement_" + $par.type +  "_" + $par.name + " => requirement_" + $par.type +  "_" + $par.name + ","  )
		$foo
		#end
	#end
	
##Exposures
	#foreach ($par in $child.exposures)
		#set( $foo = "exposure_" + $par.type +  "_" + $par.name + " => exposure_" + $par.type +  "_" + $child.name + "_" + $par.name + "_internal," )
		$foo
	#end
	
##StateVariables
	#foreach ($par in $child.state)
		#set( $foo = "statevariable_" + $par.type  +  "_" + $par.name + "_out => statevariable_" + $par.type +  "_" + $child.name + "_" + $par.name + "_out_int," ) 
		$foo
	#end
	
##StateVariables
	#foreach ($par in $child.state)
		#set( $foo = "statevariable_" + $par.type +  "_" + $par.name + "_in => statevariable_" + $par.type +  "_" + $child.name + "_" + $par.name + "_in_int," ) 
		$foo
	#end
##derivedvariables
	#foreach ($par in $child.derivedvariables)
		#set( $foo = "derivedvariable_" + $par.type  +  "_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name + "_" + $par.name + "_out," ) 
		$foo
		#set( $foo = "derivedvariable_" + $par.type  +  "_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_" + $par.name + "_in," ) 
		$foo
	#end
	#foreach ($par in $child.conditionalderivedvariables)
		#set( $foo = "derivedvariable_" + $par.type  +  "_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name + "_" + $par.name + "_out," ) 
		$foo
		#set( $foo = "derivedvariable_" + $par.type  +  "_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_" + $par.name + "_in," ) 
		$foo
	#end
	
	
	
	

		#foreach ($child2 in $child.Children)
		
			
			##Parameters
				#foreach ($par in $child2.parameters)
					#set( $foo = "param_" + $par.type +  "_" + $child2.name + "_" + $par.name + " => param_"  + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $par.name + ","  )
					$foo
				#end
				
				
			##Exposures
				#foreach ($par in $child2.exposures)
					#set( $foo = "exposure_" + $par.type +  "_" + $child2.name + "_" + $par.name + " => exposure_" + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $par.name + "," )
					$foo
				#end
				
			##StateVariables
				#foreach ($par in $child2.state)
					#set( $foo = "statevariable_" + $par.type  +  "_" + $child2.name + "_" + $par.name + "_out => statevariable_" + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $par.name + "_out," ) 
					$foo
				#end
				
			##StateVariables
				#foreach ($par in $child2.state)
					#set( $foo = "statevariable_" + $par.type +  "_" + $child2.name + "_" + $par.name + "_in => statevariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $par.name + "_in," ) 
					$foo
				#end
			##derivedvariables
				#foreach ($par in $child2.derivedvariables)
					#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $par.name + "_out," ) 
					$foo
					#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $par.name + "_in," ) 
					$foo
				#end
				#foreach ($par in $child2.conditionalderivedvariables)
					#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $par.name + "_out," ) 
					$foo
					#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $par.name + "_in," ) 
					$foo
				#end
				
				
				
				#foreach ($child3 in $child2.Children)
				
					
					##Parameters
						#foreach ($par in $child3.parameters)
							#set( $foo = "param_" + $par.type +  "_" + $child2.name + "_" + $child3.name + "_" + $par.name + " => param_"  + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $child3.name + "_" + $par.name + ","  )
							$foo
						#end
						
						
					##Exposures
						#foreach ($par in $child3.exposures)
							#set( $foo = "exposure_" + $par.type +  "_" + $child2.name + "_" + $child3.name + "_" + $par.name + " => exposure_" + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $child3.name + "_" + $par.name + "," )
							$foo
						#end
						
					##StateVariables
						#foreach ($par in $child3.state)
							#set( $foo = "statevariable_" + $par.type  +  "_" + $child2.name + "_" + $child3.name + "_" + $par.name + "_out => statevariable_" + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $child3.name + "_" + $par.name + "_out," ) 
							$foo
						#end
						
					##StateVariables
						#foreach ($par in $child3.state)
							#set( $foo = "statevariable_" + $par.type +  "_" + $child2.name + "_" + $child3.name + "_" + $par.name + "_in => statevariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $child3.name + "_" + $par.name + "_in," ) 
							$foo
						#end
					##derivedvariables
						#foreach ($par in $child3.derivedvariables)
							#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name +"_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name +"_"  + $child2.name + "_" + $child3.name + "_" + $par.name + "_out," ) 
							$foo
							#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name +"_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $child3.name + "_" + $par.name + "_in," ) 
							$foo
						#end
						#foreach ($par in $child3.conditionalderivedvariables)
							#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name +"_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name +"_"  + $child2.name + "_" + $child3.name + "_" + $par.name + "_out," ) 
							$foo
							#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name +"_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $child3.name + "_" + $par.name + "_in," ) 
							$foo
						#end
						
						
						
						#foreach ($child4 in $child3.Children)
						
							
							##Parameters
								#foreach ($par in $child4.parameters)
									#set( $foo = "param_" + $par.type +  "_" + $child2.name + "_" + $child3.name + "_" + $child4.name + "_" + $par.name + " => param_"  + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + ","  )
									$foo
								#end
								
								
							##Exposures
								#foreach ($par in $child4.exposures)
									#set( $foo = "exposure_" + $par.type +  "_" + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + " => exposure_" + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "," )
									$foo
								#end
								
							##StateVariables
								#foreach ($par in $child4.state)
									#set( $foo = "statevariable_" + $par.type  +  "_" + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_out => statevariable_" + $par.type +  "_" + $child.name + "_" + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_out," ) 
									$foo
								#end
								
							##StateVariables
								#foreach ($par in $child4.state)
									#set( $foo = "statevariable_" + $par.type +  "_" + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_in => statevariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_in," ) 
									$foo
								#end
							##derivedvariables
								#foreach ($par in $child4.derivedvariables)
									#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name +"_"  + $child2.name + "_" + $child3.name + "_" + $child4.name + "_" + $par.name + "_out," ) 
									$foo
									#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_in," ) 
									$foo
								#end
								#foreach ($par in $child4.conditionalderivedvariables)
									#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_out => derivedvariable_" + $par.type +  "_" + $child.name +"_"  + $child2.name + "_" + $child3.name + "_" + $child4.name + "_" + $par.name + "_out," ) 
									$foo
									#set( $foo = "derivedvariable_" + $par.type  + "_" + $child2.name +  "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_in => derivedvariable_" + $par.type +  "_" + $child.name + "_"  + $child2.name + "_" + $child3.name + "_" + $child4.name +"_" + $par.name + "_in," ) 
									$foo
								#end
								
								
						#end
				#end
		#end
		   
##System Parameters
           sysparam_time_timestep => sysparam_time_timestep,
           sysparam_time_simtime => sysparam_time_simtime
		   );
		   
		   

##Exposure Signals
#foreach ($par in $child.exposures)
#set( $foo = "exposure_" + $par.type +  "_" + $child.name + "_" + $par.name + " <= exposure_" + $par.type +  "_" + $child.name + "_" + $par.name + "_internal;" )
$foo
#end
##StateVariable
	#foreach ($par in $child.state)
		#set( $foo = "statevariable_" + $par.type +  "_" + $child.name + "_"  + $par.name + "_out <= statevariable_" + $par.type +  "_"+ $child.name + "_"  + $par.name + "_out_int;"  )
		$foo
	#end
	
##StateVariable
	#foreach ($par in $child.state)
		#set( $foo = "statevariable_" + $par.type +  "_"+ $child.name + "_"  + $par.name + "_in_int <= statevariable_" + $par.type +  "_" + $child.name + "_" + $par.name + "_in;"  )
		$foo
	#end



#end

---------------------------------------------------------------------


